/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package scala_app2

object App {
  def main(args: Array[String]): Unit = {
    println(greeting())

    val lines = scala.io.Source.fromFile("/Users/paulhechinger/01Scala/testing_type_freeplane/KRR.md").mkString
    convert_md_to_(lines)
  }

  def greeting(): String = "Hello, world!"

  def convert_md_to_(lines: String) = {
    val g = "#.+".r.findAllMatchIn(lines)
    val f = g.toList.map(_.toString)
    //.zipWithIndex

    val output = List()

    for (i <- 0 until f.length) {
        var idx = i + 1 
        var nb_hashtag = f(i).count(_ == '#')
        while((idx < f.length) && (f(idx).count(_ == '#') >= (nb_hashtag + 1))) {
          if (f(idx).count(_ == '#') == (nb_hashtag + 1)) {
            output :+ 
            println(f(i) + " - " + f(idx))

          }
            idx  = idx + 1
        }
    }
}
}



// val lines = scala.io.Source.fromFile("/Users/paulhechinger/01Scala/testing_type_freeplane/KRR.md").mkString

// val g = "#.+".r.findAllMatchIn(lines)
// g.toList 











// val f = lines.replaceAll("Logic", "x")

// val f = lines.replaceAll("(?<=(<pre>))((.|\n)+?)(?=<pre>)", "x")



// val r1 = "(?<=(\<pre\>))((.|\n)+?)(?=\<\/pre\>)"


// val r1 = "(?<=(<pre>))((.|\n)+?)(?=</pre>)".r

// reflect.io.File("filename").writeAll(f)


// import scala.util.matching.Regex
// import scala.util.matching.findAllMatchIn

// val g = r1.findAllMatchIn(lines)


// // g.length
// g.next

// val g = r1.replaceAllIn(lines, m=>"--" + m.group(0).getClass)

